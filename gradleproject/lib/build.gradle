/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java library project to get you started.
 * For more details on building Java & JVM projects, please refer to https://docs.gradle.org/8.12.1/userguide/building_java_projects.html in the Gradle documentation.
 * This project uses @Incubating APIs which are subject to change.
 */

plugins {
    // Apply the java-library plugin for API and implementation separation.
    id 'java-library'
    id 'java'
    id 'application'
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // This dependency is exported to consumers, that is to say found on their compile classpath.
    api libs.commons.math3

    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    implementation libs.guava

    // implementation 'commons-cli:commons-cli:1.5.0' // use for readability on cli?
    implementation 'org.apache.commons:commons-csv:1.9.0'
    implementation 'com.opencsv:opencsv:5.7.1'
}

testing {
    suites {
        // Configure the built-in test suite
        test {
            // Use JUnit4 test framework
            useJUnit('4.13.2')
        }
    }
}

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

application {
    mainClass = 'com.base.FirstTest'
}

//task runWithArgs(type: JavaExec) {
//    classpath = sourceSets.main.runtimeClasspath
//    mainClass = 'com.base.FirstTest'
//    args = project.hasProperty('csv1') && project.hasProperty('csv2') ? [project.csv1, project.csv2] : []
//}
//
//tasks.named('run') {
//    dependsOn runWithArgs
//}